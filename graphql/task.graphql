
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

type Query {
    "Find a single task by an identifying attribute."
    task( id: ID @eq): Task @find @guard(with: ["sanctum"])

    "List multiple tasks."
    tasks(
      "Filters by title. Accepts SQL LIKE wildcards `%` and `_`."
      title: String @where(operator: "like")
    ): [Task!]! @paginate(defaultCount: 10) @guard(with: ["sanctum"])
}

type Task {
    
    id: ID!

    user_id: Int!

    title: String!

    description: String!

    due_date: Date!

    status: String!

    "When the task was created."
    created_at: DateTime!

    "When the task was last updated."
    updated_at: DateTime!
}


input TaskPayload @validator{
    user_id: Int!
    title: String!
    description: String!
    due_date: String!
    status: String!
}

type Mutation {
    createTask(input: TaskPayload!): Task  @guard(with: ["sanctum"])
    updateTask(id: ID!, input: TaskPayload!): Task  @guard(with: ["sanctum"])
    deleteTask(id: ID!): Task @guard(with: ["sanctum"])
}